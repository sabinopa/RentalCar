--SQLite
-- 14
SELECT NAME, LASTNAME, EMAIL FROM CUSTOMERS WHERE STATE = 'SP';

---15

SELECT NAME, STATUS FROM CARS WHERE STATUS = 'Liberado';

---16

SELECT NAME, YEAR FROM CARS WHERE YEAR = 2016;

---17

SELECT EMPLOYEES.NAME,
       POSITIONS.DESCRIPTION FROM EMPLOYEES
JOIN POSITIONS ON (POSITIONS.ID = EMPLOYEES.POSITION_ID);

---18

SELECT EMPLOYEES.NAME,
       EMPLOYEES.ID,
       COUNT(*) AS 'LOCATIONS QUANTITY' FROM EMPLOYEES
JOIN LOCATIONS ON (EMPLOYEES.ID = LOCATIONS.EMPLOYEE_ID)
GROUP BY EMPLOYEE_ID HAVING COUNT(*) >= 2

---19

SELECT CUSTOMERS.NAME,
       CUSTOMERS.ID,
       COUNT(*) AS 'LOCATIONS QUANTITY' FROM CUSTOMERS
JOIN LOCATIONS ON (CUSTOMERS.ID = LOCATIONS.CUSTOMER_ID)
GROUP BY CUSTOMER_ID HAVING COUNT(*) >= 2

---20

SELECT CUSTOMERS.NAME AS 'Nome do Cliente',
       CARS.NAME AS 'Carro',
       EMPLOYEES.NAME AS 'Funcionário' FROM LOCATIONS
INNER JOIN CUSTOMERS ON (CUSTOMERS.ID = LOCATIONS.CUSTOMER_ID)
INNER JOIN EMPLOYEES ON (EMPLOYEES.ID = LOCATIONS.EMPLOYEE_ID)
INNER JOIN CARS ON (CARS.ID = LOCATIONS.CAR_ID)

---21

SELECT COUNT(ID) AS 'TOTAL DE LOCAÇOES' FROM LOCATIONS;

---22

SELECT CUSTOMERS.NAME AS 'Nome do Cliente',
       CARS.NAME AS 'Carro',
       EMPLOYEES.NAME AS 'Funcionário',
       MAX(TOTAL) AS 'MAIOR PREÇO' FROM LOCATIONS
INNER JOIN CUSTOMERS ON (CUSTOMERS.ID = LOCATIONS.CUSTOMER_ID)
INNER JOIN EMPLOYEES ON (EMPLOYEES.ID = LOCATIONS.EMPLOYEE_ID)
INNER JOIN CARS ON (CARS.ID = LOCATIONS.CAR_ID)

---23

SELECT CUSTOMERS.NAME AS 'Nome do Cliente',
       CARS.NAME AS 'Carro',
       LOCATIONS.START_DATE AS 'Data Início',
       LOCATIONS.END_DATE AS 'Data Final',
       EMPLOYEES.NAME AS 'Funcionário' FROM LOCATIONS
JOIN CUSTOMERS ON (CUSTOMERS.ID = LOCATIONS.CUSTOMER_ID)
JOIN EMPLOYEES ON (EMPLOYEES.ID = LOCATIONS.EMPLOYEE_ID)
JOIN CARS ON (CARS.ID = LOCATIONS.CAR_ID)
WHERE LOCATIONS.START_DATE BETWEEN '2022-05-20' AND '2022-12-25'
